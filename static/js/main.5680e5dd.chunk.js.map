{"version":3,"sources":["components/Header.js","components/EmployeeData.js","components/EmployeeTable.js","components/SearchBar.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Jumbotron","fluid","className","EmployeeData","search","sort","setSort","value","useState","employees","setEmployees","useEffect","console","log","a","fetch","response","json","payload","results","fetchEmployees","b","gender","name","first","last","location","country","email","filter","employee","toLowerCase","includes","map","Image","src","picture","thumbnail","alt","roundedCircle","login","uuid","EmployeeTable","sortColumn","setValue","sorted","e","button","target","id","Table","responsive","striped","bordered","hover","size","onClick","icon","faSortAlphaDown","SearchBar","setSearch","Form","Group","controlId","Label","Control","type","onChange","placeholder","App","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5680e5dd.chunk.js","sourcesContent":["import Jumbotron from \"react-bootstrap/Jumbotron\";\n\nconst Header = () => {\n    \nreturn (\n<Jumbotron fluid className=\"p-5 hero-text\">\n  <h1>Employee Directory</h1>\n  <p>\n    Search hundreds of talented prospects waiting to connect today.\n  </p>\n</Jumbotron>\n\n)\n\n};\n\nexport default Header;","import { useState, useEffect, useRef } from \"react\";\nimport Image from 'react-bootstrap/Image'\n\nconst EmployeeData = ({ search, sort, setSort, value }) => {\n  const [employees, setEmployees] = useState([]);\n\n  // fetch data and render on page load once\n  useEffect(() => {\n    console.log(\"intial employee data render\");\n    const queryURL = \"https://randomuser.me/api/?results=50\";\n    const fetchEmployees = async () => {\n      const response = await fetch(queryURL);\n      const payload = await response.json();\n      console.log(\"response data\", payload);\n      setEmployees(payload.results || []); // if search fails fallbacks or empty array\n    };\n    fetchEmployees();\n  }, []);\n\n  // sort column once when onclick is triggered that setSort (dependency) to true\n  useEffect(() => {\n    if (sort) {\n      // switch statement using button id value to sort through array (rows) based on greater than or less than logic\n      console.log(`value ${value}`);\n      switch (value) {\n        case \"gender\":\n          employees.sort((a, b) => {\n            if (a.gender < b.gender) return -1;\n            if (a.gender > b.gender) return 1;\n            return 0;\n          });\n          break;\n        case \"name.first\":\n          employees.sort((a, b) => {\n            if (a.name.first < b.name.first) return -1;\n            if (a.name.first > b.name.first) return 1;\n            return 0;\n          });\n          break;\n        case \"name.last\":\n          employees.sort((a, b) => {\n            if (a.name.last < b.name.last) return -1;\n            if (a.name.last > b.name.last) return 1;\n            return 0;\n          });\n          break;\n        case \"location.country\":\n          employees.sort((a, b) => {\n            if (a.location.country < b.location.country) return -1;\n            if (a.location.country > b.location.country) return 1;\n            return 0;\n          });\n          break;\n        case \"email\":\n          employees.sort((a, b) => {\n            if (a.email < b.email) return -1;\n            if (a.email > b.email) return 1;\n            return 0;\n          });\n          break;\n      }\n    }\n    setSort(false);\n  }, [sort]);\n\n  return (\n    <tbody>\n      {\n        // loop array, if matched to user search return filtered results else return all data.\n        employees\n          .filter((employee) => {\n            if (employee.location.country.toLowerCase().includes(search.toLowerCase())) {\n              return employee;\n            }\n          })\n          .map((employee) => (\n            <tr key={employee.login.uuid}>\n              <td>\n              <Image src={employee.picture.thumbnail} alt=\"employee\" roundedCircle />\n              </td>\n              <td>{employee.gender}</td>\n              <td>{employee.name.first}</td>\n              <td>{employee.name.last}</td>\n              <td>{employee.location.country}</td>\n              <td>{employee.email}</td>\n            </tr>\n          ))\n      }\n    </tbody>\n  );\n};\n\nexport default EmployeeData;\n","import { useState, useEffect, useRef } from \"react\";\nimport EmployeeData from \"./EmployeeData.js\";\nimport Table from 'react-bootstrap/Table';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSortAlphaDown } from '@fortawesome/free-solid-svg-icons'\n\nconst EmployeeTable = ({ search, sortColumn, sort, setSort}) => {\n\tconst [value, setValue] = useState('');\n\n\tconst sorted = (e) => {\n\t\tconst button = e.target.id\n    console.log('button is', value);\n\t\tsetSort(true);\n    setValue(button);\n\t}\n\n  return (\n    <div>\n      <Table responsive striped bordered hover size=\"sm\" className=\"table\">\n        <thead>\n          <tr>\n\t\t\t\t\t\t<th>Profile</th>\n            <th id=\"gender\" onClick={sorted}>Gender <FontAwesomeIcon icon={faSortAlphaDown}/></th>\n            <th id=\"name.first\" onClick={sorted}>First Name <FontAwesomeIcon icon={faSortAlphaDown}/></th>\n            <th id=\"name.last\" onClick={sorted}>Surname <FontAwesomeIcon icon={faSortAlphaDown}/></th>\n            <th id=\"location.country\" onClick={sorted}>Country <FontAwesomeIcon icon={faSortAlphaDown}/></th>\n            <th id=\"email\" onClick={sorted}>Email <FontAwesomeIcon icon={faSortAlphaDown}/></th>\n          </tr>\n        </thead>\n        <EmployeeData search={search} sortColumn={sortColumn} sort={sort} setSort={setSort} value={value}/>\n      </Table>\n    </div>\n  );\n};\n\nexport default EmployeeTable;\n","import { useState, useEffect, useRef } from \"react\";\nimport Form from \"react-bootstrap/Form\";\n\nconst SearchBar = ({ search, setSearch }) => {\n  return (\n    <Form>\n      <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n        <Form.Label>Search the database by country and sort asc. by clicking columns</Form.Label>\n        <Form.Control\n          name=\"search\"\n          type=\"text\"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n          placeholder={\"search country...\"}\n        />\n      </Form.Group>\n    </Form>\n  );\n};\n\nexport default SearchBar;\n","import \"./App.css\";\nimport { useState, useEffect, useRef } from \"react\";\nimport Header from \"./components/Header.js\";\nimport EmployeeTable from \"./components/EmployeeTable.js\";\nimport SearchBar from \"./components/SearchBar.js\";\nimport Container from 'react-bootstrap/Container';\n\nfunction App() {\n  const [search, setSearch] = useState(\"\");\n  const [sort, setSort] = useState(false);\n\n  return (\n    <Container fluid>\n      <Header />\n      <SearchBar search={search} setSearch={setSearch} />\n      <EmployeeTable search={search} sort={sort} setSort={setSort}/>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}